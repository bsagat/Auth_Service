{
  "openapi": "3.0.3",
  "info": {
    "title": "Auth Service API",
    "version": "1.0.1",
    "description": "Simple JWT Cookie-based Authentication API",
    "contact": {
      "name": "Bsagat",
      "email": "sagatbekbolat854@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:80",
      "description": "Development server"
    },
    {
      "url": "https://localhost:80",
      "description": "Secured development server"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "User login",
        "description": "User login with email and password, returns JWT access/refresh tokens in cookies",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful, access/refresh tokens set in cookies"
          },
          "400": {
            "description": "Invalid JSON or user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "User registration",
        "description": "Register a new user",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ID": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON or user data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "User email is not unique",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "summary": "Refresh JWT tokens",
        "description": "Refreshes JWT tokens using the refresh token in cookie",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Tokens refreshed and set in cookies"
          },
          "401": {
            "description": "Cookie not found or refresh failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/role": {
      "get": {
        "summary": "Check user role",
        "description": "Checks if the user is admin or not using access token from cookie",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "Role check successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Cookie not found or unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User is not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Get user data (Admin only)",
        "description": "Returns user information and password. Requires admin access token in cookie.",
        "tags": [
          "admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User data fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Cookie not found or unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user (Admin only)",
        "description": "Deletes a user by ID. Requires admin access token in cookie.",
        "tags": [
          "admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted succesfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Cookie not found or unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Admin cannot delete themselve",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "put": {
        "summary": "Update user name (Admin only)",
        "description": "Updates user name by ID. Requires admin access token in cookie.",
        "tags": [
          "admin"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID or JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Cookie not found or unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "LoginReq": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "default": "defaultEmail@gmail.com"
          },
          "password": {
            "type": "string",
            "default": "hashed_password_string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RegisterReq": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "UserName"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "defaultEmail@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "hashed_password_string"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "admin"
            ]
          }
        },
        "required": [
          "name",
          "email",
          "password",
          "role"
        ]
      },
      "UpdateUserReq": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "example": 2
          },
          "name": {
            "type": "string",
            "example": "NewUserName"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "admin"
            ]
          }
        },
        "required": [
          "ID",
          "Name",
          "role"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "is_admin": {
            "type": "boolean"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "admin"
            ]
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "example": {
          "message": "cookie not found"
        }
      }
    }
  }
}